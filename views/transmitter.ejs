<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
</head>
<body>
<h1><%= title %></h1>
<p>Welcome to <%= title %></p>
<div>
    <form id="bind-form">
        <input type="text" placeholder="uuid of reveiver" name="uuid">
        <button id="bind">Bind to receiver</button>
    </form>
    <button id="webrtc-connect">webRTC connect</button>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
  const config = {
    iceServers: [
      {
        urls: [
          "stun: stun1.l.google.com:19302",
          "stun:stun.iptel.org",
          "stun: stun3.l.google.com:19302"]
      },
      {
        url: 'turn:numb.viagenie.ca',
        credential: 'muazkh',
        username: 'webrtc@live.com'
      }
    ]
  };

  const socket = io({
    transports: ['websocket', 'polling']
  });

  socket.on('connect', () => {
    socket.on('error', console.error);
    socket.on('binded', () => {
      alert('Binded!')
    });
    socket.on('answer', answer);
  });

  document.getElementById('bind-form').addEventListener('submit', e => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const formProps = Object.fromEntries(formData);
    socket.emit('bind', { receiverUUID:  formProps.uuid });
  });

  let pc = null;

  const createPeerConnection = async () => {
    const configuration = {'iceServers': [{'urls': 'stun:stun.l.google.com:19302'}]}
    pc = new RTCPeerConnection(configuration);
    pc.createDataChannel('RTCDataChannel');
    const offer = await pc.createOffer();
    console.log('OFFER: ', offer);
    await pc.setLocalDescription(offer);
    socket.emit('offer', offer);
    pc.onicecandidate = e => {
      console.log('E: ', e)
    };
  }

  const answer = answer => {
    console.log('answer: ', answer);
    pc.setRemoteDescription(answer);
  };

  document.getElementById('webrtc-connect').addEventListener('click', createPeerConnection)
</script>
</body>
</html>
